#define F_CPU 16000000UL //dont actual think this works
#include <avr/io.h>
#include <util/delay.h>
#include <avr/pgmspace.h>
#define BAUD 0 //this is the max speed of my logic analysier (100)
#define DRLENGTH 288
#define BANKLENGTH 8
prog_uint8_t  data[] =

   //TMS D8 PB0
   //TDI D9 PB1
   //TDO D10 == input PB2
   //TCK D11 PB3


int Set_TMS(int value) {
  _delay_us(BAUD);
  if (value) {
    PORTB = PORTB | 0x01; //set to 1
  }
  else{
    PORTB = PORTB &  0xFE; //set to 0
  }
  return 0;
}

int Set_TDI(int value) {
  _delay_us(BAUD);
  if (value) {
    PORTB = PORTB | 0x02; //set to 1
  }
  else{
    PORTB = PORTB &  0xFD; //set to 0
  }
  return 0;
}

int Set_TCK(int value) {
  _delay_us(BAUD);
  if (value) {
    PORTB = PORTB | 0x08; //set to 1
  }
  else{
    PORTB = PORTB &  0xF7; //set to 0
  }
  return 0;
}

int Set_Instruction(int instruction[]) {

  //reset the jtag state
  Set_TMS(1);
  Set_TCK(0);
  int i = 0;
  for (i = 0; i < 5; i++) {
    Set_TCK(1);
    Set_TCK(0);

  }


//move into the shit ir state

  //go to RUN-TEST
  Set_TMS(0);
  Set_TCK(1);
  Set_TCK(0);
  //go to SELECT-DR-SCAN
  Set_TMS(1);
  Set_TCK(1);
  Set_TCK(0);
  //go to SELECT-IR-SCAN
  Set_TMS(1);
  Set_TCK(1);
  Set_TCK(0);
  //go to CAPTURE-IR
  Set_TMS(0);
  Set_TCK(1);
  Set_TCK(0);
  //go to SHIFT-IR
  Set_TMS(0);
  Set_TCK(1);
  Set_TCK(0);

  //shift in the instruction
  for (i = 0; i < 9; i++) {
    Set_TDI(instruction[i]);
    Set_TCK(1);
    Set_TCK(0);
  }

  //go to EXIT1-IR
  Set_TDI(instruction[9]);
  Set_TMS(1);
  Set_TCK(1);
  Set_TCK(0);

  //go to UPDATE-IR
  Set_TMS(1);
  Set_TCK(1);
  Set_TCK(0);

  //go to RUN-TEST
  Set_TMS(0);
  Set_TCK(1);
  Set_TCK(0);

  return 0;



}

int Set_Data(prog_uint8_t  data[], int bank) {

//assume this is in the run test state

  //go to SELECT-DR-SCAN
  Set_TMS(1);
  Set_TCK(1);
  Set_TCK(0);
  //go to CAPTURE-DR
  Set_TMS(0);
  Set_TCK(1);
  Set_TCK(0);
  //go to SHIFT-DR
  Set_TMS(0);
  Set_TCK(1);
  Set_TCK(0);

  //shift in the data
  int i = 0;
  for (i = bank*DRLENGTH; i < bank*DRLENGTH + 287; i++) {
    Set_TDI(data[i]);
    Set_TCK(1);
    Set_TCK(0);
  }

  //go to EXIT1-DR
  Set_TDI(data[bank*DRLENGTH + 287]);
  Set_TMS(1);
  Set_TCK(1);
  Set_TCK(0);

  //go to UPDATE-DR
  Set_TMS(1);
  Set_TCK(1);
  Set_TCK(0);

  //go to RUN-TEST
  Set_TMS(0);
  Set_TCK(1);
  Set_TCK(0);

  return 0;



}



int main() {
   int extest[] = {0,0,0,0,0,0,0,0,0,0};
  //initalise the ports
  DDRB = 0x2B;
  //turn on LED
  PORTB = PORTB | 0x20;
  //reset the jtag state
  Set_TMS(1);
  Set_TCK(0);
  int i = 0;
  for (i = 0; i < 5; i++) {
    Set_TCK(1);
    Set_TCK(0);
  }

  Set_Instruction(extest);
  for(i = 0; i<BANKLENGTH; i++){
    Set_Data(data, i);
    _delay_ms(1000);
  }


  //reset the jtag state
  // Set_TMS(1);
  // Set_TCK(0);
  // for (i = 0; i < 5; i++) {
  //   Set_TCK(1);
  //   Set_TCK(0);
  //
  // }

  //turn OFF LED
  PORTB = PORTB & 0xDF;

  return 0;
}
